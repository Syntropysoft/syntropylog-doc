"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[420],{1470:(e,t,n)=>{n.d(t,{A:()=>w});var s=n(6540),r=n(4164),i=n(3104),a=n(6347),l=n(205),o=n(7485),c=n(1682),d=n(679);function u(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,s.useMemo)(()=>{const e=t??function(e){return u(e).map(({props:{value:e,label:t,attributes:n,default:s}})=>({value:e,label:t,attributes:n,default:s}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function p({value:e,tabValues:t}){return t.some(t=>t.value===e)}function g({queryString:e=!1,groupId:t}){const n=(0,a.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,o.aZ)(r),(0,s.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})},[r,n])]}function x(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,i=h(e),[a,o]=(0,s.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i})),[c,u]=g({queryString:n,groupId:r}),[x,m]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,d.Dv)(t);return[n,(0,s.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),j=(()=>{const e=c??x;return p({value:e,tabValues:i})?e:null})();(0,l.A)(()=>{j&&o(j)},[j]);return{selectedValue:a,selectValue:(0,s.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),m(e)},[u,m,i]),tabValues:i}}var m=n(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(4848);function y({className:e,block:t,selectedValue:n,selectValue:s,tabValues:a}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.a_)(),c=e=>{const t=e.currentTarget,r=l.indexOf(t),i=a[r].value;i!==n&&(o(t),s(i))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:a.map(({value:e,label:t,attributes:s})=>(0,v.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...s,className:(0,r.A)("tabs__item",j.tabItem,s?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function f({lazy:e,children:t,selectedValue:n}){const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===n);return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function b(e){const t=x(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,v.jsx)(y,{...t,...e}),(0,v.jsx)(f,{...t,...e})]})}function w(e){const t=(0,m.A)();return(0,v.jsx)(b,{...e,children:u(e.children)},String(t))}},2419:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"examples/testing-patterns-jest","title":"Testing Patterns with Jest","description":"Learn how to write declarative, behavior-focused tests for SyntropyLog applications using Jest","source":"@site/docs/examples/29-testing-patterns-jest.md","sourceDirName":"examples","slug":"/examples/testing-patterns-jest","permalink":"/syntropylog-doc/docs/examples/testing-patterns-jest","draft":false,"unlisted":false,"editUrl":"https://github.com/Syntropysoft/SyntropyLog/tree/main/docs-docusaurus/docs/examples/29-testing-patterns-jest.md","tags":[],"version":"current","sidebarPosition":29,"frontMatter":{"id":"testing-patterns-jest","title":"Testing Patterns with Jest","sidebar_label":"Jest Testing Patterns","description":"Learn how to write declarative, behavior-focused tests for SyntropyLog applications using Jest"},"sidebar":"tutorialSidebar","previous":{"title":"Vitest Testing Patterns","permalink":"/syntropylog-doc/docs/examples/testing-patterns-vitest"},"next":{"title":"Redis Context Testing","permalink":"/syntropylog-doc/docs/examples/testing-redis-context"}}');var r=n(4848),i=n(8453),a=n(1470),l=n(9365);const o={id:"testing-patterns-jest",title:"Testing Patterns with Jest",sidebar_label:"Jest Testing Patterns",description:"Learn how to write declarative, behavior-focused tests for SyntropyLog applications using Jest"},c=void 0,d={},u=[{value:"\ud83c\udfaf What You&#39;ll Learn",id:"-what-youll-learn",level:2},{value:"\ud83d\ude80 Quick Start",id:"-quick-start",level:2},{value:"\ud83d\udccb Prerequisites",id:"-prerequisites",level:2},{value:"\ud83d\udd27 Setup",id:"-setup",level:2},{value:"1. Install Dependencies",id:"1-install-dependencies",level:3},{value:"2. Configure Jest",id:"2-configure-jest",level:3},{value:"3. Configure TypeScript",id:"3-configure-typescript",level:3},{value:"\ud83d\udd27 Understanding the SyntropyLogMock",id:"-understanding-the-syntropylogmock",level:2},{value:"What the Mock Simulates",id:"what-the-mock-simulates",level:3},{value:"Why Use the Mock?",id:"why-use-the-mock",level:3},{value:"\ud83e\uddea Testing Patterns",id:"-testing-patterns",level:2},{value:"1. Basic Test Setup with SyntropyLogMock",id:"1-basic-test-setup-with-syntropylogmock",level:3},{value:"2. Alternative: Service Helper",id:"2-alternative-service-helper",level:3},{value:"\ud83c\udfaf Key Principles",id:"-key-principles",level:2},{value:"1. Test Behavior, Not Implementation",id:"1-test-behavior-not-implementation",level:3},{value:"2. Focus on Business Logic",id:"2-focus-on-business-logic",level:3},{value:"3. Use Descriptive Test Names",id:"3-use-descriptive-test-names",level:3},{value:"\ud83d\udee0 Jest-Specific Features",id:"-jest-specific-features",level:2},{value:"1. Powerful Matchers",id:"1-powerful-matchers",level:3},{value:"2. Async Testing",id:"2-async-testing",level:3},{value:"3. Structure Validation (Better than Snapshots)",id:"3-structure-validation-better-than-snapshots",level:3},{value:"\ud83d\udd0d What&#39;s Being Tested",id:"-whats-being-tested",level:2},{value:"\ud83d\udea8 Common Pitfalls",id:"-common-pitfalls",level:2},{value:"1. Testing Framework Instead of Business Logic",id:"1-testing-framework-instead-of-business-logic",level:3},{value:"2. Testing External Dependencies",id:"2-testing-external-dependencies",level:3},{value:"3. Over-Complicated Setup",id:"3-over-complicated-setup",level:3},{value:"\ud83d\udcda Next Steps",id:"-next-steps",level:2},{value:"\ud83e\udd1d Contributing",id:"-contributing",level:2},{value:"\ud83d\udcd6 Related Examples",id:"-related-examples",level:2}];function h(e){const t={admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["This example demonstrates how to write ",(0,r.jsx)(t.strong,{children:"declarative, behavior-focused tests"})," for SyntropyLog applications using Jest. The key insight is to avoid testing the framework itself and instead focus on testing your business logic."]}),"\n",(0,r.jsx)(t.h2,{id:"-what-youll-learn",children:"\ud83c\udfaf What You'll Learn"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["How to use ",(0,r.jsx)(t.code,{children:"SyntropyLogMock"})," to avoid framework initialization issues"]}),"\n",(0,r.jsxs)(t.li,{children:["How to write tests that focus on ",(0,r.jsx)(t.strong,{children:"behavior"}),", not implementation"]}),"\n",(0,r.jsx)(t.li,{children:"How to use Jest-specific features with SyntropyLog"}),"\n",(0,r.jsx)(t.li,{children:"How to avoid testing external dependencies (Redis, brokers, etc.)"}),"\n",(0,r.jsx)(t.li,{children:"How to create maintainable and readable tests"}),"\n",(0,r.jsx)(t.li,{children:"How the mock simulates all framework functionality in memory"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"-quick-start",children:"\ud83d\ude80 Quick Start"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"install",label:"Install Dependencies",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm install\n"})})}),(0,r.jsx)(l.A,{value:"test",label:"Run Tests",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm test\n"})})}),(0,r.jsx)(l.A,{value:"watch",label:"Watch Mode",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm run test:watch\n"})})}),(0,r.jsx)(l.A,{value:"coverage",label:"Coverage",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm run test:coverage\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"-prerequisites",children:"\ud83d\udccb Prerequisites"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Node.js 18+ (using nvm: ",(0,r.jsx)(t.code,{children:"source ~/.nvm/nvm.sh"}),")"]}),"\n",(0,r.jsx)(t.li,{children:"npm or yarn"}),"\n",(0,r.jsx)(t.li,{children:"Basic knowledge of Jest and TypeScript"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"-setup",children:"\ud83d\udd27 Setup"}),"\n",(0,r.jsx)(t.h3,{id:"1-install-dependencies",children:"1. Install Dependencies"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm install syntropylog jest ts-jest @types/jest typescript\n"})}),"\n",(0,r.jsx)(t.h3,{id:"2-configure-jest",children:"2. Configure Jest"}),"\n",(0,r.jsxs)(t.p,{children:["Create ",(0,r.jsx)(t.code,{children:"jest.config.js"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"module.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'node',\n  roots: ['<rootDir>/tests'],\n  testMatch: ['**/*.test.ts'],\n  collectCoverageFrom: [\n    'src/**/*.ts',\n    '!src/**/*.d.ts',\n    '!tests/**/*'\n  ],\n  coverageDirectory: 'coverage',\n  coverageReporters: ['text', 'lcov', 'html'],\n  setupFilesAfterEnv: [],\n  moduleFileExtensions: ['ts', 'js', 'json']\n};\n"})}),"\n",(0,r.jsx)(t.h3,{id:"3-configure-typescript",children:"3. Configure TypeScript"}),"\n",(0,r.jsxs)(t.p,{children:["Create ",(0,r.jsx)(t.code,{children:"tsconfig.json"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "target": "ES2020",\n    "module": "commonjs",\n    "lib": ["ES2020"],\n    "outDir": "./dist",\n    "rootDir": "./",\n    "strict": true,\n    "esModuleInterop": true,\n    "skipLibCheck": true,\n    "forceConsistentCasingInFileNames": true,\n    "resolveJsonModule": true,\n    "declaration": true,\n    "declarationMap": true,\n    "sourceMap": true,\n    "types": ["jest", "node"]\n  },\n  "include": ["src/**/*", "tests/**/*"],\n  "exclude": ["node_modules", "dist"]\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"-understanding-the-syntropylogmock",children:"\ud83d\udd27 Understanding the SyntropyLogMock"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"SyntropyLogMock"})," is a complete simulation of the SyntropyLog framework that runs entirely in memory. Here's what it provides:"]}),"\n",(0,r.jsx)(t.h3,{id:"what-the-mock-simulates",children:"What the Mock Simulates"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"logger",label:"Logger",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"// Mock logger with all standard methods\nconst logger = mockSyntropyLog.getLogger('service-name');\nlogger.info('Message', { metadata: 'value' });\nlogger.warn('Warning message');\nlogger.error('Error message');\n"})})}),(0,r.jsx)(l.A,{value:"context",label:"Context Manager",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"// Mock context manager with correlation IDs\nconst contextManager = mockSyntropyLog.getContextManager();\nawait contextManager.run(async () => {\n  contextManager.set('x-correlation-id', 'test-id');\n  // Your business logic here\n});\n"})})}),(0,r.jsx)(l.A,{value:"managers",label:"Other Managers",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"// Mock HTTP, Broker, and Serialization managers\nconst httpManager = mockSyntropyLog.getHttpManager();\nconst brokerManager = mockSyntropyLog.getBrokerManager();\nconst serializationManager = mockSyntropyLog.getSerializationManager();\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"why-use-the-mock",children:"Why Use the Mock?"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\u2705 ",(0,r.jsx)(t.strong,{children:"No Initialization"}),": No need to call ",(0,r.jsx)(t.code,{children:"syntropyLog.init()"})," or ",(0,r.jsx)(t.code,{children:"syntropyLog.shutdown()"})]}),"\n",(0,r.jsxs)(t.li,{children:["\u2705 ",(0,r.jsx)(t.strong,{children:"No External Dependencies"}),": No Redis, brokers, or HTTP servers needed"]}),"\n",(0,r.jsxs)(t.li,{children:["\u2705 ",(0,r.jsx)(t.strong,{children:"Fast Tests"}),": Everything runs in memory"]}),"\n",(0,r.jsxs)(t.li,{children:["\u2705 ",(0,r.jsx)(t.strong,{children:"Reliable"}),": No network issues or state conflicts between tests"]}),"\n",(0,r.jsxs)(t.li,{children:["\u2705 ",(0,r.jsx)(t.strong,{children:"Isolated"}),": Each test gets a fresh mock instance"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"-testing-patterns",children:"\ud83e\uddea Testing Patterns"}),"\n",(0,r.jsx)(t.h3,{id:"1-basic-test-setup-with-syntropylogmock",children:"1. Basic Test Setup with SyntropyLogMock"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { UserService } from '../src/index';\nconst { createTestHelper } = require('syntropylog/testing');\n\n// Create test helper - this creates a SyntropyLogMock that simulates the entire framework\n// No real initialization/shutdown needed - everything is in memory\nconst testHelper = createTestHelper();\n\ndescribe('UserService', () => {\n  let userService: UserService;\n\n  beforeEach(() => {\n    testHelper.beforeEach(); // Reset mocks and create fresh instances\n    userService = new UserService(testHelper.mockSyntropyLog); // Inject the mock\n  });\n\n  // Test that demonstrates the mock is working\n  it('should use SyntropyLogMock instead of real framework', () => {\n    // Verify that we're using the mock, not the real framework\n    expect(testHelper.mockSyntropyLog).toBeDefined();\n    expect(typeof testHelper.mockSyntropyLog.getLogger).toBe('function');\n    expect(typeof testHelper.mockSyntropyLog.getContextManager).toBe('function');\n    \n    // Verify the service is using the injected mock\n    expect(userService).toBeInstanceOf(UserService);\n  });\n\n  it('should create user successfully', async () => {\n    // Arrange\n    const userData = { name: 'John Doe', email: 'john@example.com' };\n    \n    // Act\n    const result = await userService.createUser(userData);\n    \n    // Assert\n    expect(result).toHaveProperty('userId');\n    expect(result.name).toBe('John Doe');\n  });\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"2-alternative-service-helper",children:"2. Alternative: Service Helper"}),"\n",(0,r.jsx)(t.p,{children:"For even simpler setup, use the service helper:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should create user with service helper', async () => {\n  // Arrange\n  const userData = { name: 'John Doe', email: 'john@example.com' };\n  \n  // Act - Create service with mock in one line\n  const { createServiceWithMock, createSyntropyLogMock } = require('syntropylog/testing');\n  const userService = createServiceWithMock(UserService, createSyntropyLogMock());\n  \n  const result = await userService.createUser(userData);\n  \n  // Assert\n  expect(result).toHaveProperty('userId');\n});\n"})}),"\n",(0,r.jsx)(t.h2,{id:"-key-principles",children:"\ud83c\udfaf Key Principles"}),"\n",(0,r.jsx)(t.h3,{id:"1-test-behavior-not-implementation",children:"1. Test Behavior, Not Implementation"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(l.A,{value:"good",label:"\u2705 Good",default:!0,children:[(0,r.jsx)(t.p,{children:"Test what the system produces"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should return user with correct data', async () => {\n  const result = await userService.createUser(userData);\n  expect(result).toHaveProperty('userId');\n  expect(result.name).toBe('John Doe');\n});\n"})})]}),(0,r.jsxs)(l.A,{value:"bad",label:"\u274c Avoid",children:[(0,r.jsx)(t.p,{children:"Testing internal framework details"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"// Don't test if logging happened - that's framework responsibility\nit('should log user creation', async () => {\n  // This tests the framework, not your business logic\n});\n"})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"2-focus-on-business-logic",children:"2. Focus on Business Logic"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should reject invalid email', async () => {\n  await expect(userService.createUser({ email: 'invalid' }))\n    .rejects.toThrow('Invalid email format');\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"3-use-descriptive-test-names",children:"3. Use Descriptive Test Names"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should handle non-existent user gracefully', async () => {\n  const result = await userService.getUserById('non-existent');\n  expect(result).toBeNull();\n});\n"})}),"\n",(0,r.jsx)(t.h2,{id:"-jest-specific-features",children:"\ud83d\udee0 Jest-Specific Features"}),"\n",(0,r.jsx)(t.h3,{id:"1-powerful-matchers",children:"1. Powerful Matchers"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should use Jest matchers', async () => {\n  const result = await userService.createUser(userData);\n  \n  expect(result).toHaveProperty('name', 'John Doe');\n  expect(result.email).toMatch(/@/); // Regex matcher\n  expect(typeof result.name).toBe('string'); // Type checking\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"2-async-testing",children:"2. Async Testing"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should handle async operations', async () => {\n  // Jest handles async/await naturally\n  await expect(userService.getUserById('user-123'))\n    .resolves.not.toThrow();\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"3-structure-validation-better-than-snapshots",children:"3. Structure Validation (Better than Snapshots)"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should validate object structure without snapshots', async () => {\n  const result = await userService.createUser(userData);\n  \n  // Test structure without depending on random values\n  // This is better than snapshots for objects with random IDs\n  expect(result).toHaveProperty('userId');\n  expect(result).toHaveProperty('name');\n  expect(result).toHaveProperty('email');\n  expect(typeof result.userId).toBe('string');\n  expect(result.userId.length).toBeGreaterThan(0);\n  expect(result.name).toBe('John Doe');\n  expect(result.email).toBe('john@example.com');\n});\n"})}),"\n",(0,r.jsx)(t.h2,{id:"-whats-being-tested",children:"\ud83d\udd0d What's Being Tested"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"test",label:"\u2705 What We Test",default:!0,children:(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Business Logic"}),": User creation, validation, retrieval"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Error Handling"}),": Invalid inputs, edge cases"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Data Structures"}),": Return values, object properties"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Async Operations"}),": Promise resolution, error rejection"]}),"\n"]})}),(0,r.jsx)(l.A,{value:"dont",label:"\u274c What We Don't Test",children:(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Framework Features"}),": Logging, context management, Redis operations"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"External Dependencies"}),": Database connections, HTTP calls"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Implementation Details"}),": Internal method calls, private properties"]}),"\n"]})})]}),"\n",(0,r.jsx)(t.h2,{id:"-common-pitfalls",children:"\ud83d\udea8 Common Pitfalls"}),"\n",(0,r.jsx)(t.h3,{id:"1-testing-framework-instead-of-business-logic",children:"1. Testing Framework Instead of Business Logic"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"bad",label:"\u274c Don't do this",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should log user creation', async () => {\n  // Testing if logging happened - framework responsibility\n});\n"})})}),(0,r.jsx)(l.A,{value:"good",label:"\u2705 Do this instead",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should create user successfully', async () => {\n  const result = await userService.createUser(userData);\n  expect(result).toHaveProperty('userId');\n});\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"2-testing-external-dependencies",children:"2. Testing External Dependencies"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"bad",label:"\u274c Don't do this",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should connect to Redis', async () => {\n  // Testing Redis connection - external dependency\n});\n"})})}),(0,r.jsx)(l.A,{value:"good",label:"\u2705 Do this instead",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"it('should handle user data correctly', async () => {\n  const result = await userService.createUser(userData);\n  expect(result).toHaveProperty('userId');\n});\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"3-over-complicated-setup",children:"3. Over-Complicated Setup"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"bad",label:"\u274c Don't do this",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"beforeEach(async () => {\n  // Complex setup with real framework initialization\n  await syntropyLog.initialize();\n  // ... more setup\n});\n"})})}),(0,r.jsx)(l.A,{value:"good",label:"\u2705 Do this instead",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"beforeEach(() => {\n  testHelper.beforeEach(); // Simple, clean setup\n  userService = new UserService(testHelper.mockSyntropyLog);\n});\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"-next-steps",children:"\ud83d\udcda Next Steps"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Run the tests"}),": ",(0,r.jsx)(t.code,{children:"npm test"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Explore the code"}),": Look at ",(0,r.jsx)(t.code,{children:"src/index.ts"})," to understand the service"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Modify tests"}),": Try adding your own test cases"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Check coverage"}),": ",(0,r.jsx)(t.code,{children:"npm run test:coverage"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Try other examples"}),": Check examples 28 (Vitest) and 30 (Redis context)"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"-contributing",children:"\ud83e\udd1d Contributing"}),"\n",(0,r.jsx)(t.p,{children:"When adding new tests:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Follow the ",(0,r.jsx)(t.strong,{children:"Arrange-Act-Assert"})," pattern"]}),"\n",(0,r.jsx)(t.li,{children:"Use descriptive test names"}),"\n",(0,r.jsxs)(t.li,{children:["Focus on ",(0,r.jsx)(t.strong,{children:"behavior"}),", not implementation"]}),"\n",(0,r.jsx)(t.li,{children:"Keep tests simple and readable"}),"\n",(0,r.jsx)(t.li,{children:"Use the provided helpers for consistent setup"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"-related-examples",children:"\ud83d\udcd6 Related Examples"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.em,{children:"Coming soon: More testing examples will be added here as we create them."})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.admonition,{title:"Remember",type:"tip",children:(0,r.jsxs)(t.p,{children:["The goal is to write tests that are ",(0,r.jsx)(t.strong,{children:"readable"}),", ",(0,r.jsx)(t.strong,{children:"maintainable"}),", and ",(0,r.jsx)(t.strong,{children:"focused on business value"}),". Let the framework handle the complexity, and focus your tests on what matters most: your business logic."]})}),"\n",(0,r.jsx)(t.admonition,{title:"Framework Integration",type:"info",children:(0,r.jsxs)(t.p,{children:["This example works seamlessly with the published ",(0,r.jsx)(t.code,{children:"syntropylog"})," package. When you install it via npm, the ",(0,r.jsx)(t.code,{children:"syntropylog/testing"})," module will be available automatically."]})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var s=n(6540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},9365:(e,t,n)=>{n.d(t,{A:()=>a});n(6540);var s=n(4164);const r={tabItem:"tabItem_Ymn6"};var i=n(4848);function a({children:e,hidden:t,className:n}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,n),hidden:t,children:e})}}}]);