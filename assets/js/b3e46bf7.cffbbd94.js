"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[116],{849:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"examples/testing-redis-context","title":"Testing Redis Context Patterns","description":"Learn how to test SyntropyLog applications that use Redis for context management and correlation","source":"@site/docs/examples/30-testing-redis-context.md","sourceDirName":"examples","slug":"/examples/testing-redis-context","permalink":"/syntropylog-doc/docs/examples/testing-redis-context","draft":false,"unlisted":false,"editUrl":"https://github.com/Syntropysoft/SyntropyLog/tree/main/docs-docusaurus/docs/examples/30-testing-redis-context.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"id":"testing-redis-context","title":"Testing Redis Context Patterns","sidebar_label":"Redis Context Testing","description":"Learn how to test SyntropyLog applications that use Redis for context management and correlation"},"sidebar":"tutorialSidebar","previous":{"title":"Jest Testing Patterns","permalink":"/syntropylog-doc/docs/examples/testing-patterns-jest"},"next":{"title":"Advanced Testing","permalink":"/syntropylog-doc/docs/examples/advanced-testing"}}');var i=s(4848),r=s(8453),o=s(1470),a=s(9365);const l={id:"testing-redis-context",title:"Testing Redis Context Patterns",sidebar_label:"Redis Context Testing",description:"Learn how to test SyntropyLog applications that use Redis for context management and correlation"},c=void 0,d={},h=[{value:"\ud83c\udfaf Key Concepts",id:"-key-concepts",level:2},{value:"1. Test WHAT the system produces, not HOW Redis works internally",id:"1-test-what-the-system-produces-not-how-redis-works-internally",level:3},{value:"2. Declarative tests that read like specifications",id:"2-declarative-tests-that-read-like-specifications",level:3},{value:"3. Use BeaconRedisMock for in-memory testing",id:"3-use-beaconredismock-for-in-memory-testing",level:3},{value:"\ud83d\ude80 Quick Start",id:"-quick-start",level:2},{value:"\ud83d\udccb Prerequisites",id:"-prerequisites",level:2},{value:"\ud83d\udd27 Setup",id:"-setup",level:2},{value:"1. Install Dependencies",id:"1-install-dependencies",level:3},{value:"2. Configure Vitest",id:"2-configure-vitest",level:3},{value:"3. Configure TypeScript",id:"3-configure-typescript",level:3},{value:"\ud83e\uddea Testing Patterns",id:"-testing-patterns",level:2},{value:"Pattern 1: Context Structure Testing",id:"pattern-1-context-structure-testing",level:3},{value:"Pattern 2: Context Isolation Testing",id:"pattern-2-context-isolation-testing",level:3},{value:"Pattern 3: Session Operation Testing",id:"pattern-3-session-operation-testing",level:3},{value:"Pattern 4: Redis Context Persistence Testing",id:"pattern-4-redis-context-persistence-testing",level:3},{value:"\ud83d\udd0d Understanding BeaconRedisMock",id:"-understanding-beaconredismock",level:2},{value:"What the Mock Simulates",id:"what-the-mock-simulates",level:3},{value:"Why Use BeaconRedisMock?",id:"why-use-beaconredismock",level:3},{value:"\u2705 What&#39;s Being Tested",id:"-whats-being-tested",level:2},{value:"What We Test",id:"what-we-test",level:3},{value:"What We Don&#39;t Test",id:"what-we-dont-test",level:3},{value:"\ud83d\udeab Common Pitfalls",id:"-common-pitfalls",level:2},{value:"1. Testing Redis Instead of Business Logic",id:"1-testing-redis-instead-of-business-logic",level:3},{value:"2. Testing Implementation Details",id:"2-testing-implementation-details",level:3},{value:"3. Testing External Dependencies",id:"3-testing-external-dependencies",level:3},{value:"\ud83c\udfaf Next Steps",id:"-next-steps",level:2},{value:"\ud83e\udd1d Contributing",id:"-contributing",level:2},{value:"\ud83d\udd17 Related Examples",id:"-related-examples",level:2},{value:"\ud83d\udea8 For AI Assistants (and other helpful bots)",id:"-for-ai-assistants-and-other-helpful-bots",level:2},{value:"What This Example Does",id:"what-this-example-does",level:3},{value:"Key Files to Understand",id:"key-files-to-understand",level:3},{value:"Common AI Mistakes to Avoid",id:"common-ai-mistakes-to-avoid",level:3},{value:"When Modifying This Example",id:"when-modifying-this-example",level:3},{value:"If Tests Fail",id:"if-tests-fail",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This example demonstrates how to test SyntropyLog applications that use ",(0,i.jsx)(n.strong,{children:"Redis for context management and correlation"})," using declarative testing patterns."]}),"\n",(0,i.jsx)(n.h2,{id:"-key-concepts",children:"\ud83c\udfaf Key Concepts"}),"\n",(0,i.jsx)(n.h3,{id:"1-test-what-the-system-produces-not-how-redis-works-internally",children:"1. Test WHAT the system produces, not HOW Redis works internally"}),"\n",(0,i.jsx)(n.p,{children:"Instead of testing if Redis is connected or if data is stored, we test:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Context behavior"}),": Does the service maintain correlation IDs correctly?"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Session operations"}),": Do create/read/update/delete operations work?"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Error handling"}),": Does it handle invalid data properly?"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Context isolation"}),": Are different operations isolated?"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-declarative-tests-that-read-like-specifications",children:"2. Declarative tests that read like specifications"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Instead of: \"Test that Redis connection is established\"\n// We write: \"Test that session creation returns expected structure\"\n\nit('should create session with correlation and transaction IDs', async () => {\n  const userId = 'user-123';\n  const sessionData = { role: 'admin' };\n  \n  const result = await sessionService.createSession(userId, sessionData);\n  \n  expect(result).toHaveProperty('sessionId');\n  expect(result).toHaveProperty('correlationId');\n  expect(result).toHaveProperty('transactionId');\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-use-beaconredismock-for-in-memory-testing",children:"3. Use BeaconRedisMock for in-memory testing"}),"\n",(0,i.jsxs)(n.p,{children:["SyntropyLog provides ",(0,i.jsx)(n.code,{children:"BeaconRedisMock"})," that handles everything in-memory:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"No external Redis needed"})," - everything runs in memory"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Fast and reliable"})," - no network dependencies"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Full Redis API support"})," - all Redis commands work"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Automatic cleanup"})," - no data persistence between tests"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We test:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Context structure and propagation"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Session operation results"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Error handling and validation"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Context isolation between operations"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-quick-start",children:"\ud83d\ude80 Quick Start"}),"\n",(0,i.jsxs)(o.A,{children:[(0,i.jsx)(a.A,{value:"install",label:"Install Dependencies",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install\n"})})}),(0,i.jsx)(a.A,{value:"test",label:"Run Tests",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm test\n"})})}),(0,i.jsx)(a.A,{value:"watch",label:"Watch Mode",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm run test:watch\n"})})}),(0,i.jsx)(a.A,{value:"coverage",label:"Coverage",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm run test:coverage\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"-prerequisites",children:"\ud83d\udccb Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Node.js 18+ (using nvm: ",(0,i.jsx)(n.code,{children:"source ~/.nvm/nvm.sh"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"npm or yarn"}),"\n",(0,i.jsx)(n.li,{children:"Basic knowledge of Vitest and TypeScript"}),"\n",(0,i.jsx)(n.li,{children:"Understanding of Redis context patterns"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-setup",children:"\ud83d\udd27 Setup"}),"\n",(0,i.jsx)(n.h3,{id:"1-install-dependencies",children:"1. Install Dependencies"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install syntropylog vitest typescript\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-configure-vitest",children:"2. Configure Vitest"}),"\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:"vitest.config.ts"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { defineConfig } from 'vitest/config';\n\nexport default defineConfig({\n  test: {\n    environment: 'node',\n    globals: true,\n  },\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-configure-typescript",children:"3. Configure TypeScript"}),"\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:"tsconfig.json"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "target": "ES2020",\n    "module": "ESNext",\n    "lib": ["ES2020"],\n    "outDir": "./dist",\n    "rootDir": "./",\n    "strict": true,\n    "esModuleInterop": true,\n    "skipLibCheck": true,\n    "forceConsistentCasingInFileNames": true,\n    "resolveJsonModule": true,\n    "declaration": true,\n    "declarationMap": true,\n    "sourceMap": true,\n    "types": ["vitest/globals", "node"]\n  },\n  "include": ["src/**/*", "tests/**/*"],\n  "exclude": ["node_modules", "dist"]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-testing-patterns",children:"\ud83e\uddea Testing Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"pattern-1-context-structure-testing",children:"Pattern 1: Context Structure Testing"}),"\n",(0,i.jsx)(n.p,{children:"Test that context operations return the expected structure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should create session with correlation and transaction IDs', async () => {\n  const result = await sessionService.createSession('user-123', { role: 'admin' });\n  \n  expect(result).toHaveProperty('sessionId');\n  expect(result).toHaveProperty('correlationId');\n  expect(result).toHaveProperty('transactionId');\n  expect(typeof result.correlationId).toBe('string');\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pattern-2-context-isolation-testing",children:"Pattern 2: Context Isolation Testing"}),"\n",(0,i.jsx)(n.p,{children:"Test that different operations maintain separate context:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should generate unique session IDs for different sessions', async () => {\n  const session1 = await sessionService.createSession('user-123', { role: 'admin' });\n  const session2 = await sessionService.createSession('user-456', { role: 'user' });\n  \n  expect(session1.sessionId).not.toBe(session2.sessionId);\n  expect(session1.correlationId).not.toBe(session2.correlationId);\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pattern-3-session-operation-testing",children:"Pattern 3: Session Operation Testing"}),"\n",(0,i.jsx)(n.p,{children:"Test that session operations behave correctly:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should handle non-existent sessions gracefully', async () => {\n  const result = await sessionService.getSession('non-existent');\n  expect(result).toBeNull();\n});\n\nit('should handle invalid update data', async () => {\n  await expect(sessionService.updateSession('session-123', { role: 'invalid-role' }))\n    .rejects.toThrow('Invalid role specified');\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pattern-4-redis-context-persistence-testing",children:"Pattern 4: Redis Context Persistence Testing"}),"\n",(0,i.jsx)(n.p,{children:"Test that context data persists across operations:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should persist and retrieve context data across operations', async () => {\n  // Create session\n  const session = await sessionService.createSession('user-123', { role: 'admin' });\n  \n  // Retrieve session\n  const retrieved = await sessionService.getSession(session.sessionId);\n  \n  expect(retrieved).toMatchObject({\n    userId: 'user-123',\n    role: 'admin',\n    sessionId: session.sessionId\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-understanding-beaconredismock",children:"\ud83d\udd0d Understanding BeaconRedisMock"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"BeaconRedisMock"})," is a complete in-memory simulation of Redis that provides:"]}),"\n",(0,i.jsx)(n.h3,{id:"what-the-mock-simulates",children:"What the Mock Simulates"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Redis Commands"}),": All standard Redis operations (GET, SET, DEL, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Persistence"}),": In-memory storage that persists during test execution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Context Management"}),": Correlation IDs, transaction IDs, and session data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error Handling"}),": Simulates Redis errors and edge cases"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"why-use-beaconredismock",children:"Why Use BeaconRedisMock?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"No External Redis"}),": No need for Redis server or Docker containers"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Fast Execution"}),": Everything runs in memory"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Reliable"}),": No network issues or connection problems"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Isolated"}),": Each test gets a fresh mock instance"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Full API Support"}),": All Redis commands work as expected"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-whats-being-tested",children:"\u2705 What's Being Tested"}),"\n",(0,i.jsx)(n.h3,{id:"what-we-test",children:"What We Test"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Context Structure"}),": Correlation IDs, transaction IDs, session IDs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Session Operations"}),": Create, read, update, delete operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Persistence"}),": Context data across operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error Handling"}),": Invalid data, missing sessions, edge cases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Context Isolation"}),": Different operations maintain separate context"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"what-we-dont-test",children:"What We Don't Test"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Redis Connection"}),": Network connectivity, authentication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Redis Performance"}),": Memory usage, response times"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Redis Configuration"}),": Server settings, cluster configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"External Dependencies"}),": Network calls, database connections"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-common-pitfalls",children:"\ud83d\udeab Common Pitfalls"}),"\n",(0,i.jsx)(n.h3,{id:"1-testing-redis-instead-of-business-logic",children:"1. Testing Redis Instead of Business Logic"}),"\n",(0,i.jsxs)(n.p,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Don't do this:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should connect to Redis successfully', async () => {\n  // Testing Redis connection - external dependency\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Do this instead:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should create session with proper context', async () => {\n  const result = await sessionService.createSession('user-123', { role: 'admin' });\n  expect(result).toHaveProperty('correlationId');\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-testing-implementation-details",children:"2. Testing Implementation Details"}),"\n",(0,i.jsxs)(n.p,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Don't do this:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should call Redis SET command', async () => {\n  // Testing internal Redis calls - implementation detail\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Do this instead:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should persist session data', async () => {\n  const session = await sessionService.createSession('user-123', { role: 'admin' });\n  const retrieved = await sessionService.getSession(session.sessionId);\n  expect(retrieved.role).toBe('admin');\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-testing-external-dependencies",children:"3. Testing External Dependencies"}),"\n",(0,i.jsxs)(n.p,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Don't do this:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should handle Redis network errors', async () => {\n  // Testing network issues - external dependency\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Do this instead:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('should handle invalid session data', async () => {\n  await expect(sessionService.createSession('user-123', null))\n    .rejects.toThrow('Session data is required');\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-next-steps",children:"\ud83c\udfaf Next Steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Run the tests"}),": ",(0,i.jsx)(n.code,{children:"npm test"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Explore the code"}),": Look at ",(0,i.jsx)(n.code,{children:"src/index.ts"})," to understand the session service"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Modify tests"}),": Try adding your own test cases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check coverage"}),": ",(0,i.jsx)(n.code,{children:"npm run test:coverage"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Try other examples"}),": Check examples 28 (Vitest) and 29 (Jest)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-contributing",children:"\ud83e\udd1d Contributing"}),"\n",(0,i.jsx)(n.p,{children:"When adding new tests:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Follow the ",(0,i.jsx)(n.strong,{children:"Arrange-Act-Assert"})," pattern"]}),"\n",(0,i.jsx)(n.li,{children:"Use descriptive test names"}),"\n",(0,i.jsxs)(n.li,{children:["Focus on ",(0,i.jsx)(n.strong,{children:"behavior"}),", not implementation"]}),"\n",(0,i.jsx)(n.li,{children:"Keep tests simple and readable"}),"\n",(0,i.jsx)(n.li,{children:"Test context structure and isolation"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-related-examples",children:"\ud83d\udd17 Related Examples"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"./testing-patterns-vitest",children:"Testing patterns with Vitest"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"./testing-patterns-jest",children:"Testing patterns with Jest"})})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"./advanced-testing",children:"Advanced testing scenarios"})})," (Coming Soon)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.admonition,{title:"Remember",type:"tip",children:(0,i.jsxs)(n.p,{children:["The goal is to test ",(0,i.jsx)(n.strong,{children:"business logic and context behavior"}),", not Redis internals. Let the mock handle the complexity, and focus your tests on what matters most: your application's behavior."]})}),"\n",(0,i.jsx)(n.admonition,{title:"Framework Integration",type:"info",children:(0,i.jsxs)(n.p,{children:["This example works seamlessly with the published ",(0,i.jsx)(n.code,{children:"syntropylog"})," package. The ",(0,i.jsx)(n.code,{children:"BeaconRedisMock"})," is included in the testing module and provides full Redis simulation."]})}),"\n",(0,i.jsx)(n.h2,{id:"-for-ai-assistants-and-other-helpful-bots",children:"\ud83d\udea8 For AI Assistants (and other helpful bots)"}),"\n",(0,i.jsx)(n.p,{children:"If you're an AI assistant or helpful bot working on this codebase, here's what you need to know:"}),"\n",(0,i.jsx)(n.h3,{id:"what-this-example-does",children:"What This Example Does"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Shows how to test SyntropyLog applications that use Redis for context"}),"\n",(0,i.jsx)(n.li,{children:"Uses BeaconRedisMock for in-memory Redis simulation"}),"\n",(0,i.jsx)(n.li,{children:"Focuses on testing context behavior, not Redis internals"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-files-to-understand",children:"Key Files to Understand"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"src/index.ts"})," - The SessionService being tested"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tests/session-service.test.ts"})," - The actual tests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tests/test-utils.ts"})," - Helper functions for test setup"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"common-ai-mistakes-to-avoid",children:"Common AI Mistakes to Avoid"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Don't try to connect to real Redis"})," - Use BeaconRedisMock instead"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Don't test Redis connection"})," - Test business logic only"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Don't test Redis commands"})," - Test context behavior instead"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Don't test network errors"})," - Test data validation instead"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-modifying-this-example",children:"When Modifying This Example"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Keep tests simple and focused on context behavior"}),"\n",(0,i.jsx)(n.li,{children:"Use the existing patterns as templates"}),"\n",(0,i.jsx)(n.li,{children:"Don't add unnecessary complexity"}),"\n",(0,i.jsx)(n.li,{children:"Follow the Arrange-Act-Assert pattern"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"if-tests-fail",children:"If Tests Fail"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check that you're using BeaconRedisMock correctly"}),"\n",(0,i.jsx)(n.li,{children:"Ensure you're not trying to access real Redis"}),"\n",(0,i.jsx)(n.li,{children:"Verify that the service is properly injected with the mock"}),"\n",(0,i.jsx)(n.li,{children:"Look at the existing working tests as reference"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Remember: This is about testing context behavior, not Redis. Keep it simple!"})]})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},1470:(e,n,s)=>{s.d(n,{A:()=>w});var t=s(6540),i=s(4164),r=s(3104),o=s(6347),a=s(205),l=s(7485),c=s(1682),d=s(679);function h(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:s}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:s,default:t}})=>({value:e,label:n,attributes:s,default:t}))}(s);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}function x({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const s=(0,o.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(i),(0,t.useCallback)(e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})},[i,s])]}function g(e){const{defaultValue:n,queryString:s=!1,groupId:i}=e,r=u(e),[o,l]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find(e=>e.default)??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r})),[c,h]=p({queryString:s,groupId:i}),[g,j]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,i]=(0,d.Dv)(n);return[s,(0,t.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:i}),m=(()=>{const e=c??g;return x({value:e,tabValues:r})?e:null})();(0,a.A)(()=>{m&&l(m)},[m]);return{selectedValue:o,selectValue:(0,t.useCallback)(e=>{if(!x({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),j(e)},[h,j,r]),tabValues:r}}var j=s(2303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=s(4848);function f({className:e,block:n,selectedValue:s,selectValue:t,tabValues:o}){const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),c=e=>{const n=e.currentTarget,i=a.indexOf(n),r=o[i].value;r!==s&&(l(n),t(r))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=a.indexOf(e.currentTarget)+1;n=a[s]??a[0];break}case"ArrowLeft":{const s=a.indexOf(e.currentTarget)-1;n=a[s]??a[a.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:t})=>(0,v.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{a.push(e)},onKeyDown:d,onClick:c,...t,className:(0,i.A)("tabs__item",m.tabItem,t?.className,{"tabs__item--active":s===e}),children:n??e},e))})}function y({lazy:e,children:n,selectedValue:s}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===s);return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function b(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,i.A)("tabs-container",m.tabList),children:[(0,v.jsx)(f,{...n,...e}),(0,v.jsx)(y,{...n,...e})]})}function w(e){const n=(0,j.A)();return(0,v.jsx)(b,{...e,children:h(e.children)},String(n))}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},9365:(e,n,s)=>{s.d(n,{A:()=>o});s(6540);var t=s(4164);const i={tabItem:"tabItem_Ymn6"};var r=s(4848);function o({children:e,hidden:n,className:s}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,s),hidden:n,children:e})}}}]);