"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[178],{4241:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>t,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"production/graceful-shutdown","title":"Graceful Shutdown - Critical for Production","description":"\u26a0\ufe0f CRITICAL: This boilerplate is MANDATORY for ALL applications (development and production). Without it, your application may lose logs and crash unexpectedly when stopped.","source":"@site/docs/production/graceful-shutdown.md","sourceDirName":"production","slug":"/production/graceful-shutdown","permalink":"/syntropylog-doc/docs/production/graceful-shutdown","draft":false,"unlisted":false,"editUrl":"https://github.com/Syntropysoft/SyntropyLog/tree/main/docs-docusaurus/docs/production/graceful-shutdown.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configuration Patterns - Production Ready","permalink":"/syntropylog-doc/docs/production/configuration-patterns"}}');var i=o(4848),s=o(8453);const l={},t="Graceful Shutdown - Critical for Production",a={},c=[{value:"\ud83d\udea8 Why Graceful Shutdown is Essential",id:"-why-graceful-shutdown-is-essential",level:2},{value:"\ud83d\udd27 Required Boilerplate",id:"-required-boilerplate",level:2},{value:"\ud83c\udfaf What This Boilerplate Does",id:"-what-this-boilerplate-does",level:2},{value:"<strong>1. Signal Handling</strong>",id:"1-signal-handling",level:3},{value:"<strong>2. Log Flushing</strong>",id:"2-log-flushing",level:3},{value:"<strong>3. Resource Cleanup</strong>",id:"3-resource-cleanup",level:3},{value:"\ud83d\ude80 Usage in Your Application",id:"-usage-in-your-application",level:2},{value:"\u26a0\ufe0f Application Checklist",id:"\ufe0f-application-checklist",level:2},{value:"\ud83d\udd0d Testing Graceful Shutdown",id:"-testing-graceful-shutdown",level:2},{value:"\ud83d\udcda Examples",id:"-examples",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"graceful-shutdown---critical-for-production",children:"Graceful Shutdown - Critical for Production"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u26a0\ufe0f ",(0,i.jsx)(e.strong,{children:"CRITICAL"}),": This boilerplate is ",(0,i.jsx)(e.strong,{children:"MANDATORY"})," for ALL applications (development and production). Without it, your application may lose logs and crash unexpectedly when stopped."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"-why-graceful-shutdown-is-essential",children:"\ud83d\udea8 Why Graceful Shutdown is Essential"}),"\n",(0,i.jsx)(e.p,{children:"When your application is stopped (either by Ctrl+C in development or SIGTERM in production), it needs time to shut down gracefully. Without proper shutdown handling:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Lost logs"}),": Logs in the queue may never be flushed"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Corrupted data"}),": Incomplete operations may leave data in an inconsistent state"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Resource leaks"}),": Connections to Redis, brokers, and databases may not be closed properly"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Application crashes"}),": May be forcefully killed, causing data loss"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"-required-boilerplate",children:"\ud83d\udd27 Required Boilerplate"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Every production application MUST include this boilerplate:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// =================================================================\n//  boilerplate.ts - Standard initialization and shutdown\n//  RESPONSIBILITY: Provide reusable boilerplate for SyntropyLog\n// =================================================================\n\nimport { syntropyLog } from 'syntropylog';\nimport { syntropyConfig } from './config';\n\nexport async function initializeSyntropyLog(): Promise<void> {\n  console.log('\ud83d\ude80 Initializing SyntropyLog...');\n  \n  try {\n    await syntropyLog.init(syntropyConfig);\n    console.log('\u2705 SyntropyLog initialized successfully!');\n  } catch (error) {\n    console.error('\u274c SyntropyLog initialization failed:', error);\n    throw error;\n  }\n}\n\nexport async function gracefulShutdown(): Promise<void> {\n  console.log('\ud83d\udd04 Shutting down SyntropyLog gracefully...');\n  \n  try {\n    // \u26a0\ufe0f CRITICAL: This flushes all pending logs before shutdown\n    await syntropyLog.shutdown();\n    console.log('\u2705 SyntropyLog shutdown completed');\n  } catch (error) {\n    console.error('\u274c Error during shutdown:', error);\n  }\n}\n\n// Signal handlers for graceful shutdown\nprocess.on('SIGINT', async () => {\n  console.log('\\n\ud83d\uded1 Received SIGINT, shutting down gracefully...');\n  await gracefulShutdown();\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', async () => {\n  console.log('\\n\ud83d\uded1 Received SIGTERM, shutting down gracefully...');\n  await gracefulShutdown();\n  process.exit(0);\n});\n"})}),"\n",(0,i.jsx)(e.h2,{id:"-what-this-boilerplate-does",children:"\ud83c\udfaf What This Boilerplate Does"}),"\n",(0,i.jsx)(e.h3,{id:"1-signal-handling",children:(0,i.jsx)(e.strong,{children:"1. Signal Handling"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"SIGTERM"}),": Kubernetes termination signal (production)"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"SIGINT"}),": Manual interruption (Ctrl+C in development)"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Graceful response"}),": Application responds properly to both signals"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"2-log-flushing",children:(0,i.jsx)(e.strong,{children:"2. Log Flushing"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"syntropyLog.shutdown()"})}),": Flushes all pending logs in the queue"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"No data loss"}),": Ensures all logs are written before exit"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Ordered shutdown"}),": Proper cleanup sequence"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"3-resource-cleanup",children:(0,i.jsx)(e.strong,{children:"3. Resource Cleanup"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Connection closure"}),": Closes Redis, broker, and HTTP connections"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Memory cleanup"}),": Releases allocated resources"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"State consistency"}),": Ensures clean application state"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"-usage-in-your-application",children:"\ud83d\ude80 Usage in Your Application"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"import { initializeSyntropyLog, gracefulShutdown } from './boilerplate';\n\nasync function main() {\n  // Initialize SyntropyLog with your configuration\n  await initializeSyntropyLog();\n  \n  // Your application logic here\n  const logger = syntropyLog.getLogger();\n  logger.info('Application started');\n  \n  // The boilerplate handles shutdown automatically\n  // No need to call gracefulShutdown() manually\n}\n\nmain().catch(console.error);\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\ufe0f-application-checklist",children:"\u26a0\ufe0f Application Checklist"}),"\n",(0,i.jsx)(e.p,{children:"Before running your application (development or production), ensure:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u2705 ",(0,i.jsx)(e.strong,{children:"Boilerplate included"}),": Graceful shutdown handlers are in place"]}),"\n",(0,i.jsxs)(e.li,{children:["\u2705 ",(0,i.jsx)(e.strong,{children:"Signal handling"}),": SIGTERM and SIGINT are handled"]}),"\n",(0,i.jsxs)(e.li,{children:["\u2705 ",(0,i.jsx)(e.strong,{children:"Log flushing"}),": ",(0,i.jsx)(e.code,{children:"syntropyLog.shutdown()"})," is called"]}),"\n",(0,i.jsxs)(e.li,{children:["\u2705 ",(0,i.jsx)(e.strong,{children:"Error handling"}),": Shutdown errors are logged"]}),"\n",(0,i.jsxs)(e.li,{children:["\u2705 ",(0,i.jsx)(e.strong,{children:"Development testing"}),": Test with Ctrl+C to ensure graceful shutdown"]}),"\n",(0,i.jsxs)(e.li,{children:["\u2705 ",(0,i.jsx)(e.strong,{children:"Production readiness"}),": Shutdown completes within Kubernetes grace period"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"-testing-graceful-shutdown",children:"\ud83d\udd0d Testing Graceful Shutdown"}),"\n",(0,i.jsx)(e.p,{children:"Test your shutdown handling:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'# Development testing (Ctrl+C)\n# Simply press Ctrl+C while your app is running\n# You should see: "\ud83d\uded1 Received SIGINT, shutting down gracefully..."\n\n# Production testing (SIGTERM)\nkill -TERM <your-process-pid>\n\n# Manual SIGINT testing\nkill -INT <your-process-pid>\n\n# Verify logs are flushed before exit\n'})}),"\n",(0,i.jsx)(e.h2,{id:"-examples",children:"\ud83d\udcda Examples"}),"\n",(0,i.jsx)(e.p,{children:"See complete examples with boilerplate in the main repository:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/Syntropysoft/SyntropyLog/tree/main/sub-modules/examples/20-basic-kafka-correlation",children:"Kafka Correlation Example"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/Syntropysoft/SyntropyLog/tree/main/sub-modules/examples/21-basic-rabbitmq-broker",children:"RabbitMQ Broker Example"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/Syntropysoft/SyntropyLog/tree/main/sub-modules/examples/09-http-configuration",children:"HTTP Configuration Example"})}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Remember"}),": This boilerplate is not optional - it's a ",(0,i.jsx)(e.strong,{children:"requirement for ALL applications"})," (development and production) for reliable, observable applications."]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>l,x:()=>t});var r=o(6540);const i={},s=r.createContext(i);function l(n){const e=r.useContext(s);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);