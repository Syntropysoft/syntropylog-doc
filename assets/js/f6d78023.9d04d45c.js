"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[545],{2697:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"configuration/configuration","title":"Configuration Guide","description":"Complete guide to configuring SyntropyLog for your application","source":"@site/docs/configuration/index.md","sourceDirName":"configuration","slug":"/configuration/","permalink":"/syntropylog-doc/docs/configuration/","draft":false,"unlisted":false,"editUrl":"https://github.com/Syntropysoft/SyntropyLog/tree/main/docs-docusaurus/docs/configuration/index.md","tags":[],"version":"current","frontMatter":{"id":"configuration","title":"Configuration Guide","sidebar_label":"Configuration","description":"Complete guide to configuring SyntropyLog for your application"},"sidebar":"tutorialSidebar","previous":{"title":"Boilerplate - Critical API Reference","permalink":"/syntropylog-doc/docs/api-reference/boilerplate"},"next":{"title":"Logger","permalink":"/syntropylog-doc/docs/core-concepts/logger"}}');var r=i(4848),t=i(8453);const s={id:"configuration",title:"Configuration Guide",sidebar_label:"Configuration",description:"Complete guide to configuring SyntropyLog for your application"},a="Configuration Guide",c={},l=[{value:"Quick Configuration",id:"quick-configuration",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Logger Configuration",id:"logger-configuration",level:3},{value:"HTTP Configuration",id:"http-configuration",level:3},{value:"Redis Configuration",id:"redis-configuration",level:3},{value:"Broker Configuration",id:"broker-configuration",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Custom Serializers",id:"custom-serializers",level:3},{value:"Custom Transports",id:"custom-transports",level:3},{value:"Environment-Specific Configuration",id:"environment-specific-configuration",level:2},{value:"Development",id:"development",level:3},{value:"Production",id:"production",level:3},{value:"Testing Configuration",id:"testing-configuration",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"configuration-guide",children:"Configuration Guide"})}),"\n",(0,r.jsx)(e.p,{children:"This guide covers all aspects of configuring SyntropyLog for your application."}),"\n",(0,r.jsx)(e.h2,{id:"quick-configuration",children:"Quick Configuration"}),"\n",(0,r.jsx)(e.p,{children:"For most applications, you'll want HTTP instrumentation and context management:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"import { syntropyLog, PrettyConsoleTransport } from 'syntropylog';\nimport { AxiosAdapter } from '@syntropylog/adapters';\nimport axios from 'axios';\n\nawait syntropyLog.init({\n  logger: {\n    level: 'info',\n    serviceName: 'my-app',\n    transports: [new PrettyConsoleTransport()],\n  },\n  loggingMatrix: {\n    default: ['correlationId'],\n    error: ['*'], // Log everything on errors\n  },\n  http: {\n    instances: [\n      {\n        instanceName: 'myApi',\n        adapter: new AxiosAdapter(axios.create({ baseURL: 'https://api.example.com' })),\n      },\n    ],\n  },\n});\n"})}),"\n",(0,r.jsx)(e.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,r.jsx)(e.h3,{id:"logger-configuration",children:"Logger Configuration"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"logger: {\n  level: 'info',                    // Log level: 'debug', 'info', 'warn', 'error'\n  serviceName: 'my-app',            // Service name for correlation\n  transports: [new PrettyConsoleTransport()], // Logging transports\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"http-configuration",children:"HTTP Configuration"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"http: {\n  instances: [\n    {\n      instanceName: 'myApi',        // Unique name for this HTTP client\n      adapter: new AxiosAdapter(axios.create({ baseURL: 'https://api.example.com' })),\n    },\n  ],\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"redis-configuration",children:"Redis Configuration"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"redis: {\n  instances: [\n    {\n      instanceName: 'cache',        // Unique name for this Redis instance\n      host: 'localhost',\n      port: 6379,\n    },\n    {\n      instanceName: 'session',      // Another Redis instance\n      host: 'localhost', \n      port: 6380,\n    },\n  ],\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"broker-configuration",children:"Broker Configuration"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"brokers: {\n  instances: [\n    {\n      instanceName: 'events',       // Unique name for this broker\n      type: 'kafka',\n      config: {\n        clientId: 'my-app',\n        brokers: ['localhost:9092'],\n      },\n    },\n  ],\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,r.jsx)(e.h3,{id:"custom-serializers",children:"Custom Serializers"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"serializers: {\n  custom: {\n    mySerializer: {\n      serialize: (data) => JSON.stringify(data),\n      deserialize: (data) => JSON.parse(data),\n    },\n  },\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"custom-transports",children:"Custom Transports"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"transports: {\n  custom: {\n    myTransport: {\n      log: (level, message, meta) => {\n        // Custom logging logic\n      },\n    },\n  },\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"environment-specific-configuration",children:"Environment-Specific Configuration"}),"\n",(0,r.jsx)(e.h3,{id:"development",children:"Development"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"const config = {\n  logger: {\n    level: 'debug',\n    transports: [new PrettyConsoleTransport()],\n  },\n  // Minimal configuration for development\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"production",children:"Production"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"const config = {\n  logger: {\n    level: 'info',\n    transports: [\n      new JsonConsoleTransport(),\n      new FileTransport({ filename: '/var/log/app.log' }),\n    ],\n  },\n  // Full configuration for production\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"testing-configuration",children:"Testing Configuration"}),"\n",(0,r.jsx)(e.p,{children:"For testing, use the SyntropyLogMock:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"const { createTestHelper } = require('syntropylog/testing');\nconst testHelper = createTestHelper();\n\n// No configuration needed - everything is mocked\nconst service = new MyService(testHelper.mockSyntropyLog);\n"})}),"\n",(0,r.jsx)(e.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.a,{href:"../getting-started",children:"Getting Started"})})," - Complete setup guide"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.a,{href:"../api-reference",children:"API Reference"})})," - Full API documentation"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.a,{href:"../examples",children:"Examples"})})," - Production-ready examples"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.a,{href:"../production",children:"Production Guide"})})," - Production deployment guide"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>a});var o=i(6540);const r={},t=o.createContext(r);function s(n){const e=o.useContext(t);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),o.createElement(t.Provider,{value:e},n.children)}}}]);