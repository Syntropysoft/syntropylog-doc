"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[992],{8042:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"production/configuration-patterns","title":"Configuration Patterns - Production Ready","description":"This page shows the complete configuration patterns used in production applications with SyntropyLog.","source":"@site/docs/production/configuration-patterns.md","sourceDirName":"production","slug":"/production/configuration-patterns","permalink":"/syntropylog-doc/docs/production/configuration-patterns","draft":false,"unlisted":false,"editUrl":"https://github.com/Syntropysoft/SyntropyLog/tree/main/docs-docusaurus/docs/production/configuration-patterns.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Production","permalink":"/syntropylog-doc/docs/production/"},"next":{"title":"Graceful Shutdown - Critical for Production","permalink":"/syntropylog-doc/docs/production/graceful-shutdown"}}');var i=o(4848),r=o(8453);const s={},a="Configuration Patterns - Production Ready",l={},c=[{value:"\ud83c\udfd7\ufe0f Standard Project Structure",id:"\ufe0f-standard-project-structure",level:2},{value:"\ud83d\udcdd Configuration File (config.ts)",id:"-configuration-file-configts",level:2},{value:"\ud83d\udd27 Boilerplate File (boilerplate.ts)",id:"-boilerplate-file-boilerplatets",level:2},{value:"\ud83d\ude80 Application Entry Point (main.ts)",id:"-application-entry-point-maints",level:2},{value:"\ud83c\udfaf Key Benefits of This Pattern",id:"-key-benefits-of-this-pattern",level:2},{value:"<strong>1. Separation of Concerns</strong>",id:"1-separation-of-concerns",level:3},{value:"<strong>2. Reusability</strong>",id:"2-reusability",level:3},{value:"<strong>3. Production Ready</strong>",id:"3-production-ready",level:3},{value:"<strong>4. Type Safety</strong>",id:"4-type-safety",level:3},{value:"\ud83d\udcda Complete Examples",id:"-complete-examples",level:2},{value:"\u26a0\ufe0f Production Checklist",id:"\ufe0f-production-checklist",level:2}];function p(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"configuration-patterns---production-ready",children:"Configuration Patterns - Production Ready"})}),"\n",(0,i.jsx)(e.p,{children:"This page shows the complete configuration patterns used in production applications with SyntropyLog."}),"\n",(0,i.jsx)(e.h2,{id:"\ufe0f-standard-project-structure",children:"\ud83c\udfd7\ufe0f Standard Project Structure"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"src/\n\u251c\u2500\u2500 config.ts          # SyntropyLog configuration\n\u251c\u2500\u2500 boilerplate.ts     # Initialization and shutdown handlers\n\u251c\u2500\u2500 main.ts           # Application entry point\n\u2514\u2500\u2500 ...\n"})}),"\n",(0,i.jsx)(e.h2,{id:"-configuration-file-configts",children:"\ud83d\udcdd Configuration File (config.ts)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// =================================================================\n//  config.ts - SyntropyLog Configuration\n//  RESPONSIBILITY: Define configuration using official framework types\n// =================================================================\n\nimport { SyntropyLogConfig, ClassicConsoleTransport } from 'syntropylog';\nimport { KafkaAdapter } from '@syntropylog/adapters/brokers';\nimport { AxiosAdapter } from '@syntropylog/adapters/http';\nimport { Kafka, logLevel as kafkaLogLevel } from 'kafkajs';\nimport axios from 'axios';\n\n// \u2705 Using official framework types\nexport const syntropyConfig: SyntropyLogConfig = {\n  logger: {\n    level: 'info',\n    serviceName: 'my-production-app',\n    serializerTimeoutMs: 100,\n    transports: [new ClassicConsoleTransport()]\n  },\n\n  context: {\n    correlationIdHeader: 'X-Correlation-ID',\n  },\n\n  loggingMatrix: {\n    default: ['correlationId', 'serviceName'],\n    error: ['*'], // Log everything on errors\n  },\n\n  http: {\n    instances: [\n      {\n        instanceName: 'api-client',\n        adapter: new AxiosAdapter(\n          axios.create({ \n            baseURL: 'https://api.example.com',\n            timeout: 5000 \n          })\n        ),\n      },\n    ],\n  },\n\n  brokers: {\n    instances: [\n      {\n        instanceName: 'events-bus',\n        adapter: new KafkaAdapter(\n          new Kafka({\n            clientId: 'my-app-client',\n            brokers: ['localhost:9092'],\n            logLevel: kafkaLogLevel.ERROR,\n            retry: {\n              initialRetryTime: 100,\n              retries: 8\n            }\n          }),\n          'my-app-group'\n        ),\n      },\n    ],\n  },\n};\n"})}),"\n",(0,i.jsx)(e.h2,{id:"-boilerplate-file-boilerplatets",children:"\ud83d\udd27 Boilerplate File (boilerplate.ts)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// =================================================================\n//  boilerplate.ts - Standard initialization and shutdown\n//  RESPONSIBILITY: Provide reusable boilerplate for SyntropyLog\n// =================================================================\n\nimport { syntropyLog } from 'syntropylog';\nimport { syntropyConfig } from './config';\n\nexport async function initializeSyntropyLog(): Promise<void> {\n  console.log('\ud83d\ude80 Initializing SyntropyLog...');\n  \n  try {\n    // \u2705 Using configuration from config.ts - simple async/await pattern\n    await syntropyLog.init(syntropyConfig);\n    console.log('\u2705 SyntropyLog initialized successfully!');\n  } catch (error) {\n    console.error('\u274c SyntropyLog initialization failed:', error);\n    throw error;\n  }\n}\n\nexport async function gracefulShutdown(): Promise<void> {\n  console.log('\ud83d\udd04 Shutting down SyntropyLog gracefully...');\n  \n  try {\n    // \u26a0\ufe0f CRITICAL: This flushes all pending logs before shutdown\n    await syntropyLog.shutdown();\n    console.log('\u2705 SyntropyLog shutdown completed');\n  } catch (error) {\n    console.error('\u274c Error during shutdown:', error);\n  }\n}\n\n// Signal handlers for graceful shutdown\nprocess.on('SIGINT', async () => {\n  console.log('\\n\ud83d\uded1 Received SIGINT, shutting down gracefully...');\n  await gracefulShutdown();\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', async () => {\n  console.log('\\n\ud83d\uded1 Received SIGTERM, shutting down gracefully...');\n  await gracefulShutdown();\n  process.exit(0);\n});\n"})}),"\n",(0,i.jsx)(e.h2,{id:"-application-entry-point-maints",children:"\ud83d\ude80 Application Entry Point (main.ts)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// =================================================================\n//  main.ts - Application Entry Point\n//  RESPONSIBILITY: Initialize and run the application\n// =================================================================\n\nimport { syntropyLog } from 'syntropylog';\nimport { initializeSyntropyLog } from './boilerplate';\n\nasync function main() {\n  try {\n    // Initialize SyntropyLog with configuration\n    await initializeSyntropyLog();\n    \n    // Get logger instance\n    const logger = syntropyLog.getLogger('main');\n    logger.info('Application started successfully');\n    \n    // Get other resources (singleton instances)\n    const apiClient = syntropyLog.getHttp('api-client');\n    const eventsBroker = syntropyLog.getBroker('events-bus');\n    \n    // Your application logic here\n    logger.info('All resources initialized, starting application...');\n    \n    // Example: Make an HTTP request\n    const response = await apiClient.request({\n      method: 'GET',\n      url: '/health'\n    });\n    \n    logger.info('Health check completed', { status: response.status });\n    \n  } catch (error) {\n    console.error('\u274c Application startup failed:', error);\n    process.exit(1);\n  }\n}\n\n// Start the application\nmain().catch((error) => {\n  console.error('\u274c Unhandled error:', error);\n  process.exit(1);\n});\n"})}),"\n",(0,i.jsx)(e.h2,{id:"-key-benefits-of-this-pattern",children:"\ud83c\udfaf Key Benefits of This Pattern"}),"\n",(0,i.jsx)(e.h3,{id:"1-separation-of-concerns",children:(0,i.jsx)(e.strong,{children:"1. Separation of Concerns"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"config.ts"}),": Pure configuration definition"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"boilerplate.ts"}),": Initialization and shutdown logic"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"main.ts"}),": Application business logic"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"2-reusability",children:(0,i.jsx)(e.strong,{children:"2. Reusability"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Boilerplate can be copied between projects"}),"\n",(0,i.jsx)(e.li,{children:"Configuration is easily modifiable"}),"\n",(0,i.jsx)(e.li,{children:"Clear responsibility boundaries"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"3-production-ready",children:(0,i.jsx)(e.strong,{children:"3. Production Ready"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Graceful shutdown handling"}),"\n",(0,i.jsx)(e.li,{children:"Error handling at all levels"}),"\n",(0,i.jsx)(e.li,{children:"Proper resource cleanup"}),"\n",(0,i.jsx)(e.li,{children:"Kubernetes compatibility"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"4-type-safety",children:(0,i.jsx)(e.strong,{children:"4. Type Safety"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Uses official framework types"}),"\n",(0,i.jsx)(e.li,{children:"Compile-time configuration validation"}),"\n",(0,i.jsx)(e.li,{children:"IDE autocompletion support"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"-complete-examples",children:"\ud83d\udcda Complete Examples"}),"\n",(0,i.jsx)(e.p,{children:"See these patterns in action in the main repository:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/Syntropysoft/SyntropyLog/tree/main/sub-modules/examples/20-basic-kafka-correlation",children:"Kafka Correlation Example"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/Syntropysoft/SyntropyLog/tree/main/sub-modules/examples/21-basic-rabbitmq-broker",children:"RabbitMQ Broker Example"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/Syntropysoft/SyntropyLog/tree/main/sub-modules/examples/09-http-configuration",children:"HTTP Configuration Example"})}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\ufe0f-production-checklist",children:"\u26a0\ufe0f Production Checklist"}),"\n",(0,i.jsx)(e.p,{children:"Before deploying, ensure:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u2705 Configuration uses official types"}),"\n",(0,i.jsx)(e.li,{children:"\u2705 Boilerplate includes graceful shutdown"}),"\n",(0,i.jsx)(e.li,{children:"\u2705 Error handling at all levels"}),"\n",(0,i.jsx)(e.li,{children:"\u2705 Resource cleanup on shutdown"}),"\n",(0,i.jsx)(e.li,{children:"\u2705 Signal handlers for SIGTERM/SIGINT"}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>s,x:()=>a});var t=o(6540);const i={},r=t.createContext(i);function s(n){const e=t.useContext(r);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);